apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-realm
  namespace: esb
data:
  ebs-realm.json: |
    {
      "id": "ebs-realm",
      "realm": "ebs-realm",
      "displayName": "",
      "displayNameHtml": "",
      "notBefore": 0,
      "defaultSignatureAlgorithm": "RS256",
      "revokeRefreshToken": false,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 300,
      "accessTokenLifespanForImplicitFlow": 900,
      "ssoSessionIdleTimeout": 1800,
      "ssoSessionMaxLifespan": 36000,
      "ssoSessionIdleTimeoutRememberMe": 0,
      "ssoSessionMaxLifespanRememberMe": 0,
      "offlineSessionIdleTimeout": 2592000,
      "offlineSessionMaxLifespanEnabled": false,
      "offlineSessionMaxLifespan": 5184000,
      "clientSessionIdleTimeout": 0,
      "clientSessionMaxLifespan": 0,
      "clientOfflineSessionIdleTimeout": 0,
      "clientOfflineSessionMaxLifespan": 0,
      "accessCodeLifespan": 60,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 43200,
      "actionTokenGeneratedByUserLifespan": 300,
      "oauth2DeviceCodeLifespan": 600,
      "oauth2DevicePollingInterval": 5,
      "enabled": true,
      "sslRequired": "none",
      "registrationAllowed": false,
      "registrationEmailAsUsername": false,
      "rememberMe": false,
      "verifyEmail": false,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": false,
      "editUsernameAllowed": false,
      "bruteForceProtected": false,
      "permanentLockout": false,
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 60,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 30,
      "roles": {
        "realm": [
          {
            "id": "4ac5e282-ba95-4d20-ac07-b783fdc17198",
            "name": "M_dashboard",
            "description": "",
            "composite": false,
            "clientRole": false,
            "containerId": "ebs-realm",
            "attributes": {}
          },
          {
            "id": "d473f307-9e12-4c08-99f3-aa786c5a5ee1",
            "name": "ROLE_ADMIN",
            "composite": true,
            "composites": {
              "realm": [
                "ROLE_USER",
                "M_dashboard",
                "M_groups"
              ]
            },
            "clientRole": false,
            "containerId": "ebs-realm",
            "attributes": {}
          },
          {
            "id": "22ec017d-9142-400c-b51a-ff46d324263f",
            "name": "M_users",
            "description": "",
            "composite": false,
            "clientRole": false,
            "containerId": "ebs-realm",
            "attributes": {}
          },
          {
            "id": "0823cdf0-8e6b-4e97-885d-8f888e92a145",
            "name": "ROLE_SUPERADMIN",
            "composite": true,
            "composites": {
              "realm": [
                "M_users",
                "ROLE_ADMIN"
              ]
            },
            "clientRole": false,
            "containerId": "ebs-realm",
            "attributes": {}
          },
          {
            "id": "da364133-e654-4170-96f4-465c74e7ddaa",
            "name": "M_campagne",
            "description": "",
            "composite": false,
            "clientRole": false,
            "containerId": "ebs-realm",
            "attributes": {}
          },
          {
            "id": "6c6e8d77-1f63-4a0a-b2d6-e25d3273318e",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "ebs-realm",
            "attributes": {}
          },
          {
            "id": "eebc17f9-e1cf-4b7e-96b2-fdfb76fc3e8f",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "ebs-realm",
            "attributes": {}
          },
          {
            "id": "26470c2b-0d0f-46bd-b9f2-f1e2c001a3a9",
            "name": "M_groups",
            "description": "",
            "composite": false,
            "clientRole": false,
            "containerId": "ebs-realm",
            "attributes": {}
          },
          {
            "id": "160a58e0-7252-420b-93e3-101a341bf75a",
            "name": "default-roles-ebs-realm",
            "description": "${role_default-roles}",
            "composite": true,
            "composites": {
              "realm": [
                "offline_access",
                "uma_authorization"
              ],
              "client": {
                "account": [
                  "manage-account",
                  "view-profile"
                ]
              }
            },
            "clientRole": false,
            "containerId": "ebs-realm",
            "attributes": {}
          },
          {
            "id": "e5c85855-8b90-4886-8486-299cc2fc00a8",
            "name": "M_carnet_adresse",
            "description": "",
            "composite": false,
            "clientRole": false,
            "containerId": "ebs-realm",
            "attributes": {}
          },
          {
            "id": "3a8c38c6-e1a7-4525-b897-46f017233f62",
            "name": "ROLE_SUPERSET_ADMIN",
            "description": "",
            "composite": false,
            "clientRole": false,
            "containerId": "ebs-realm",
            "attributes": {}
          },
          {
            "id": "28f072f8-6810-4060-9b9d-dd59b59458f0",
            "name": "M_model",
            "description": "",
            "composite": false,
            "clientRole": false,
            "containerId": "ebs-realm",
            "attributes": {}
          },
          {
            "id": "aa9f1d4b-862a-4bf3-b33c-4025464e6327",
            "name": "M_email",
            "description": "Gestion des emails",
            "composite": false,
            "clientRole": false,
            "containerId": "ebs-realm",
            "attributes": {}
          },
          {
            "id": "b61d940c-8272-4b0d-9622-0bea5285c0f5",
            "name": "ROLE_USER",
            "composite": true,
            "composites": {
              "realm": [
                "M_carnet_adresse",
                "M_email",
                "M_campagne",
                "M_model"
              ]
            },
            "clientRole": false,
            "containerId": "ebs-realm",
            "attributes": {}
          }
        ],
        "client": {
          "ebs-app": [],
          "ebs-analytics": [],
          "realm-management": [
            {
              "id": "9d597d20-1dee-46ce-a3a1-c8349a099f96",
              "name": "manage-realm",
              "description": "${role_manage-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "cdcd5a2d-88df-46da-a4a2-bddd1a0b8c0c",
              "name": "manage-clients",
              "description": "${role_manage-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "414d201e-e601-4431-8280-c700f284d705",
              "name": "view-realm",
              "description": "${role_view-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "e5b4a192-122b-463d-93ea-783bffc8d944",
              "name": "query-realms",
              "description": "${role_query-realms}",
              "composite": false,
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "0f1f1e6c-5196-4e6e-a97d-90bb16cde28a",
              "name": "query-clients",
              "description": "${role_query-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "b3f73a53-1975-4c57-9c3b-8f2106c589cf",
              "name": "query-users",
              "description": "${role_query-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "aad784e5-b645-42f6-8ede-0fd91ebf5866",
              "name": "manage-identity-providers",
              "description": "${role_manage-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "288f7a00-c42a-4fdb-858a-03354eec9a82",
              "name": "view-events",
              "description": "${role_view-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "e96d8de8-e8dc-4058-9576-29c35d7404ab",
              "name": "create-client",
              "description": "${role_create-client}",
              "composite": false,
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "5076e42e-6b62-4a15-892e-ad8540d23b1c",
              "name": "manage-events",
              "description": "${role_manage-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "f5bfe093-b117-48b2-9c0a-eed373d79e9a",
              "name": "manage-authorization",
              "description": "${role_manage-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "391d6fe7-4ba8-44dc-9fa9-a7d301d22521",
              "name": "view-identity-providers",
              "description": "${role_view-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "c20088d6-46f9-4feb-afde-9292759d55fd",
              "name": "impersonation",
              "description": "${role_impersonation}",
              "composite": false,
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "109d55aa-6e1e-41be-b4f4-abb5ac233d68",
              "name": "realm-admin",
              "description": "${role_realm-admin}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "manage-realm",
                    "view-realm",
                    "manage-clients",
                    "query-realms",
                    "query-clients",
                    "query-users",
                    "manage-identity-providers",
                    "view-events",
                    "manage-events",
                    "create-client",
                    "manage-authorization",
                    "view-identity-providers",
                    "impersonation",
                    "manage-users",
                    "view-clients",
                    "query-groups",
                    "view-users",
                    "view-authorization"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "f1a236f4-7e36-4101-a9c4-065b48712f76",
              "name": "manage-users",
              "description": "${role_manage-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "0ba78921-ae54-482d-ae35-fb6d86358e3e",
              "name": "view-clients",
              "description": "${role_view-clients}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-clients"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "16a95058-b5ec-4c53-9043-4b5b357d8bcc",
              "name": "query-groups",
              "description": "${role_query-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "26f62db5-83d1-4815-965f-70f3a1de93c1",
              "name": "view-users",
              "description": "${role_view-users}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-users",
                    "query-groups"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            },
            {
              "id": "f077c21b-6592-4f1d-9ed0-e6e3b042ca58",
              "name": "view-authorization",
              "description": "${role_view-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
              "attributes": {}
            }
          ],
          "security-admin-console": [],
          "admin-cli": [],
          "ebs-contact-picker": [],
          "account-console": [],
          "broker": [
            {
              "id": "23ba7027-59d2-4c1f-a6f8-05f8d29cae20",
              "name": "read-token",
              "description": "${role_read-token}",
              "composite": false,
              "clientRole": true,
              "containerId": "88877773-f5fd-4dfc-9c2d-a0b4089f5891",
              "attributes": {}
            }
          ],
          "account": [
            {
              "id": "91c442fd-ff0a-49f9-acac-58ce9a1db228",
              "name": "delete-account",
              "description": "${role_delete-account}",
              "composite": false,
              "clientRole": true,
              "containerId": "64bceaea-da53-4da2-baae-487dbb9a63a6",
              "attributes": {}
            },
            {
              "id": "774335b1-738d-4ce2-9c97-f4f21c99b3ad",
              "name": "view-applications",
              "description": "${role_view-applications}",
              "composite": false,
              "clientRole": true,
              "containerId": "64bceaea-da53-4da2-baae-487dbb9a63a6",
              "attributes": {}
            },
            {
              "id": "1b8aeca6-6cf3-44b2-b4d3-6a2a0530cb16",
              "name": "view-groups",
              "description": "${role_view-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "64bceaea-da53-4da2-baae-487dbb9a63a6",
              "attributes": {}
            },
            {
              "id": "b3d1f0ec-2081-4551-a3ae-554379cd17f5",
              "name": "manage-account",
              "description": "${role_manage-account}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "manage-account-links"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "64bceaea-da53-4da2-baae-487dbb9a63a6",
              "attributes": {}
            },
            {
              "id": "38e26a3f-afa4-4baa-a3ac-e6ee865f4091",
              "name": "view-consent",
              "description": "${role_view-consent}",
              "composite": false,
              "clientRole": true,
              "containerId": "64bceaea-da53-4da2-baae-487dbb9a63a6",
              "attributes": {}
            },
            {
              "id": "2154b1d9-d81a-4c21-9584-04a6ca47c2dd",
              "name": "manage-account-links",
              "description": "${role_manage-account-links}",
              "composite": false,
              "clientRole": true,
              "containerId": "64bceaea-da53-4da2-baae-487dbb9a63a6",
              "attributes": {}
            },
            {
              "id": "a65aee33-148f-42af-b8b4-65691082e414",
              "name": "manage-consent",
              "description": "${role_manage-consent}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "view-consent"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "64bceaea-da53-4da2-baae-487dbb9a63a6",
              "attributes": {}
            },
            {
              "id": "4483826f-33ae-4b49-be7c-881016e52e03",
              "name": "view-profile",
              "description": "${role_view-profile}",
              "composite": false,
              "clientRole": true,
              "containerId": "64bceaea-da53-4da2-baae-487dbb9a63a6",
              "attributes": {}
            }
          ]
        }
      },
      "groups": [],
      "defaultRole": {
        "id": "160a58e0-7252-420b-93e3-101a341bf75a",
        "name": "default-roles-ebs-realm",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "ebs-realm"
      },
      "requiredCredentials": [
        "password"
      ],
      "otpPolicyType": "totp",
      "otpPolicyAlgorithm": "HmacSHA1",
      "otpPolicyInitialCounter": 0,
      "otpPolicyDigits": 6,
      "otpPolicyLookAheadWindow": 1,
      "otpPolicyPeriod": 30,
      "otpPolicyCodeReusable": false,
      "otpSupportedApplications": [
        "totpAppGoogleName",
        "totpAppFreeOTPName",
        "totpAppMicrosoftAuthenticatorName"
      ],
      "webAuthnPolicyRpEntityName": "keycloak",
      "webAuthnPolicySignatureAlgorithms": [
        "ES256"
      ],
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "webAuthnPolicyCreateTimeout": 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyAcceptableAaguids": [],
      "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256"
      ],
      "webAuthnPolicyPasswordlessRpId": "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout": 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyPasswordlessAcceptableAaguids": [],
      "users": [
        {
          "id": "fc789ac3-bfac-4b04-809d-0229b7734006",
          "createdTimestamp": 1731055114320,
          "username": "ebs-superadmin",
          "enabled": true,
          "totp": false,
          "emailVerified": false,
          "firstName": "ebs-superadmin",
          "lastName": "ebs-superadmin",
          "credentials": [
            {
              "id": "5dc4d957-90e8-435d-8e7a-298b4d58887f",
              "type": "password",
              "userLabel": "My password",
              "createdDate": 1731055125540,
              "secretData": "{\"value\":\"/1Ny9xKbygLLcaEdNKPC52YhVt3iY52GukR7VZE5H+o=\",\"salt\":\"9Gp+sg3n2DJ2nwcCDva7sw==\",\"additionalParameters\":{}}",
              "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
            }
          ],
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "offline_access",
            "uma_authorization",
            "default-roles-ebs-realm",
            "ROLE_SUPERSET_ADMIN",
            "ROLE_EBS_MANAGEMENT"
          ],
          "clientRoles": {
            "realm-management": [
              "realm-admin"
            ]
          },
          "notBefore": 0,
          "groups": []
        }
      ],
      "scopeMappings": [
        {
          "clientScope": "offline_access",
          "roles": [
            "offline_access"
          ]
        }
      ],
      "clientScopeMappings": {
        "account": [
          {
            "client": "account-console",
            "roles": [
              "manage-account",
              "view-groups"
            ]
          }
        ]
      },
      "clients": [
        {
          "id": "64bceaea-da53-4da2-baae-487dbb9a63a6",
          "clientId": "account",
          "name": "${client_account}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/ebs-realm/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "/realms/ebs-realm/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "1e0ce98d-f266-428f-ada8-e08284cd8c72",
              "name": "docker-v2-allow-all-mapper",
              "protocol": "docker-v2",
              "protocolMapper": "docker-v2-allow-all-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "6596acbd-bd4d-4ca5-8acd-b05d1572eb83",
          "clientId": "account-console",
          "name": "${client_account-console}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/ebs-realm/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "/realms/ebs-realm/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "2c38ef58-e0ab-4176-8264-e133bd48ade4",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "a1186a21-d77d-460c-a6f2-2a23b41ce729",
          "clientId": "admin-cli",
          "name": "${client_admin-cli}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "75c7f2be-b54b-48a8-972d-666481e99fb6",
              "name": "docker-v2-allow-all-mapper",
              "protocol": "docker-v2",
              "protocolMapper": "docker-v2-allow-all-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "88877773-f5fd-4dfc-9c2d-a0b4089f5891",
          "clientId": "broker",
          "name": "${client_broker}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "1ab8ee5a-d784-4874-b407-49978d8f67cf",
              "name": "docker-v2-allow-all-mapper",
              "protocol": "docker-v2",
              "protocolMapper": "docker-v2-allow-all-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "10b8fd66-e3ab-44b2-ad9a-c404913c86d3",
          "clientId": "ebs-analytics",
          "name": "ebs-analytics",
          "description": "",
          "rootUrl": "https://analytics.easybulk.intra",
          "adminUrl": "https://analytics.easybulk.intra",
          "baseUrl": "http://ebs-analytics",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "https://analytics.easybulk.intra/*"
          ],
          "webOrigins": [
            "https://analytics.easybulk.intra"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "http://ebs-analytics/*",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false",
            "use.refresh.tokens": "true",
            "oidc.ciba.grant.enabled": "false",
            "backchannel.logout.session.required": "true",
            "client_credentials.use_refresh_token": "false",
            "acr.loa.map": "{}",
            "require.pushed.authorization.requests": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "display.on.consent.screen": "false",
            "token.response.type.bearer.lower-case": "false"
          },
          "authenticationFlowBindingOverrides": {
            "browser": "9aa4de46-2eeb-4346-bda4-7b884be363dc"
          },
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "c8357cc7-62fb-441f-9814-2b2a9d3cf1f5",
              "name": "docker-v2-allow-all-mapper",
              "protocol": "docker-v2",
              "protocolMapper": "docker-v2-allow-all-mapper",
              "consentRequired": false,
              "config": {}
            },
            {
              "id": "ffc813e2-8859-4205-a649-761bfa9c5f70",
              "name": "currOrganization",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "currOrganizationInfo",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "currOrganizationInfo",
                "jsonType.label": "String",
                "access.tokenResponse.claim": "false"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "8bdde64d-647b-4ce2-aeab-8c5fef1fc194",
          "clientId": "ebs-app",
          "name": "ebs-app",
          "description": "",
          "rootUrl": "https://app.easybulk.intra/",
          "adminUrl": "",
          "baseUrl": "https://app.easybulk.intra/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "https://app.easybulk.intra/*",
            "http://app.easybulk.intra/*"
          ],
          "webOrigins": [
            "*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "saml.assertion.signature": "false",
            "saml.force.post.binding": "false",
            "saml.multivalued.roles": "false",
            "saml.encrypt": "false",
            "post.logout.redirect.uris": "+",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false",
            "saml.server.signature": "false",
            "saml.server.signature.keyinfo.ext": "false",
            "use.refresh.tokens": "true",
            "exclude.session.state.from.auth.response": "false",
            "oidc.ciba.grant.enabled": "false",
            "backchannel.logout.session.required": "true",
            "client_credentials.use_refresh_token": "false",
            "saml_force_name_id_format": "false",
            "acr.loa.map": "{}",
            "require.pushed.authorization.requests": "false",
            "saml.client.signature": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "saml.authnstatement": "false",
            "display.on.consent.screen": "false",
            "token.response.type.bearer.lower-case": "false",
            "saml.onetimeuse.condition": "false"
          },
          "authenticationFlowBindingOverrides": {
            "browser": "2504a064-87c4-4675-b27a-e8f85327c6ea"
          },
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "5b8add9d-f720-491c-b129-c1abd2cedc70",
              "name": "currOrganization",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "currOrganizationInfo",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "currOrganizationInfo",
                "jsonType.label": "String",
                "access.tokenResponse.claim": "false"
              }
            },
            {
              "id": "37cf1d4a-180c-4541-a160-27548b7086b2",
              "name": "docker-v2-allow-all-mapper",
              "protocol": "docker-v2",
              "protocolMapper": "docker-v2-allow-all-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "289c5d65-1f23-491a-8810-5e0085725387",
          "clientId": "ebs-contact-picker",
          "name": "ebs-contact-picker",
          "description": "Front app to pick contacts from the phone",
          "rootUrl": "https://qr.easybulk.intra/",
          "adminUrl": "",
          "baseUrl": "https://qr.easybulk.intra/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "https://qr.easybulk.intra/*",
            "http://qr.easybulk.intra/*"
          ],
          "webOrigins": [
            "*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "oidc.ciba.grant.enabled": "false",
            "backchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "+",
            "display.on.consent.screen": "false",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "183c7c4c-476c-46cb-aea4-f850eff873ed",
              "name": "docker-v2-allow-all-mapper",
              "protocol": "docker-v2",
              "protocolMapper": "docker-v2-allow-all-mapper",
              "consentRequired": false,
              "config": {}
            },
            {
              "id": "4b0d3807-8913-48c1-815f-9ed282519e9f",
              "name": "currOrganization",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "currOrganizationInfo",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "currOrganizationInfo",
                "jsonType.label": "String",
                "access.tokenResponse.claim": "false"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "ddeb6ba4-4f74-41c3-b9ab-4564d0463141",
          "clientId": "realm-management",
          "name": "${client_realm-management}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "5bcf059a-56f2-464b-a7cc-ed477987faf9",
              "name": "docker-v2-allow-all-mapper",
              "protocol": "docker-v2",
              "protocolMapper": "docker-v2-allow-all-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "6e79445c-f3ac-4c67-87c5-3bce5f747446",
          "clientId": "security-admin-console",
          "name": "${client_security-admin-console}",
          "rootUrl": "${authAdminUrl}",
          "baseUrl": "/admin/ebs-realm/console/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "/admin/ebs-realm/console/*"
          ],
          "webOrigins": [
            "+"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "51550cbc-e600-449e-9d3d-999c45404d6d",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        }
      ],
      "clientScopes": [
        {
          "id": "d5bb84eb-b3c1-430f-8fae-344cee7e1f4b",
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${profileScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "ff32af4c-3835-4890-9b74-3ed057bb97e6",
              "name": "given name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "1791584d-a473-47d6-a49b-09450e0b1d54",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            },
            {
              "id": "c829324f-4a00-4609-9719-ff82a17aaedb",
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "id": "0cb3a550-cac9-450d-8829-b64ed37eb045",
              "name": "gender",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String"
              }
            },
            {
              "id": "31a427a5-62db-4849-937c-dbecb4bb6b99",
              "name": "picture",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String"
              }
            },
            {
              "id": "c4ad2246-537d-441d-8e65-9acaf1643a0d",
              "name": "website",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String"
              }
            },
            {
              "id": "790e2615-6763-47c1-8fcf-ecd0ce140e4b",
              "name": "middle name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "ca959445-3523-4516-be48-952f1784400b",
              "name": "nickname",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String"
              }
            },
            {
              "id": "2b1efe63-c8da-42ad-82a0-2b12d69747fe",
              "name": "profile",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String"
              }
            },
            {
              "id": "06bf788e-c88b-4115-b2cb-4b82f9602cbf",
              "name": "zoneinfo",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String"
              }
            },
            {
              "id": "3a91f87f-9af8-458f-9bdd-ff8b6ebc3f42",
              "name": "family name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "9a713fad-47b8-4c09-958d-8e50ffb72035",
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "d59841b9-6b7a-487e-b28e-e0a50e16fcb9",
              "name": "updated at",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "String"
              }
            },
            {
              "id": "62ff3550-1d42-4e5f-b404-42ab760eea99",
              "name": "birthdate",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "d60ab073-090e-444e-8f56-1ab76a0b2a21",
          "name": "role_list",
          "description": "SAML role list",
          "protocol": "saml",
          "attributes": {
            "consent.screen.text": "${samlRoleListScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "f562fe43-7232-424f-b0c5-a69b977c4a47",
              "name": "role list",
              "protocol": "saml",
              "protocolMapper": "saml-role-list-mapper",
              "consentRequired": false,
              "config": {
                "single": "false",
                "attribute.nameformat": "Basic",
                "attribute.name": "Role"
              }
            }
          ]
        },
        {
          "id": "9e0f4ebd-6e31-4ef9-9661-1404e6687d4c",
          "name": "phone",
          "description": "OpenID Connect built-in scope: phone",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${phoneScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "06ab5651-4a9a-4ce4-81be-db7f2781e07d",
              "name": "phone number",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumber",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number",
                "jsonType.label": "String"
              }
            },
            {
              "id": "e8e453ad-c0fa-4af0-bb07-a932be73538b",
              "name": "phone number verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumberVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number_verified",
                "jsonType.label": "boolean"
              }
            }
          ]
        },
        {
          "id": "ab398bdd-0585-4e47-a379-eac57aa8def0",
          "name": "address",
          "description": "OpenID Connect built-in scope: address",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${addressScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "d68943b0-4312-4984-94c6-294db603ffd3",
              "name": "address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-address-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute.formatted": "formatted",
                "user.attribute.country": "country",
                "user.attribute.postal_code": "postal_code",
                "userinfo.token.claim": "true",
                "user.attribute.street": "street",
                "id.token.claim": "true",
                "user.attribute.region": "region",
                "access.token.claim": "true",
                "user.attribute.locality": "locality"
              }
            }
          ]
        },
        {
          "id": "84177b6a-ef07-4300-b60c-a236d398e865",
          "name": "acr",
          "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "a33841cd-fcc7-4515-b1ae-648c815b9a09",
              "name": "acr loa level",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-acr-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "a6a38324-26cd-4fee-9f01-371049b0e19c",
          "name": "roles",
          "description": "OpenID Connect scope for add user roles to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": "${rolesScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "9e5a186b-ab35-46a2-a4db-b606a92a2e6f",
              "name": "client roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            },
            {
              "id": "fe460af4-3f5e-4ed8-8bc5-fef443db90c7",
              "name": "role_keys",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String",
                "usermodel.clientRoleMapping.clientId": "dashboard-app"
              }
            },
            {
              "id": "9b4f9a3b-01f8-4f74-96e1-b3a1551545c8",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            },
            {
              "id": "8e2fb385-89cf-433b-a502-73bfa4f698bd",
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "foo",
                "id.token.claim": "false",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "80abbeac-4eea-4396-8460-fee4d617d665",
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "f2a49941-9e04-4e93-8bbb-4e8a53ac398b",
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${emailScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "3c272bdc-e405-4d42-bc07-f668d07e3bd2",
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            },
            {
              "id": "5f3b544d-fed8-486e-9dc9-31ce15e86cad",
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            }
          ]
        },
        {
          "id": "3457375e-7a26-4bf8-bd70-a7142f1fd39e",
          "name": "microprofile-jwt",
          "description": "Microprofile - JWT built-in scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "c162bc22-85ea-4e86-9212-64cfe72f06e5",
              "name": "upn",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String"
              }
            },
            {
              "id": "4eba713e-d2b5-41bd-ab21-d64230e513e1",
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "d6fbc366-7c3e-4b9d-81fe-32eca18dd8f9",
          "name": "web-origins",
          "description": "OpenID Connect scope for add allowed web origins to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "ed1aa23d-6ef3-4920-b149-8f27438e9060",
              "name": "allowed web origins",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-allowed-origins-mapper",
              "consentRequired": false,
              "config": {}
            }
          ]
        }
      ],
      "defaultDefaultClientScopes": [
        "acr",
        "roles",
        "profile",
        "role_list",
        "web-origins",
        "email"
      ],
      "defaultOptionalClientScopes": [
        "microprofile-jwt",
        "offline_access",
        "phone",
        "address"
      ],
      "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "referrerPolicy": "no-referrer",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
      },
      "smtpServer": {
        "replyToDisplayName": "",
        "starttls": "true",
        "auth": "true",
        "envelopeFrom": "",
        "ssl": "false",
        "password": "SS&s5LGYPr1o",
        "port": "587",
        "host": "mail.cgpr.tn",
        "replyTo": "",
        "from": "service.sms@CGPR.TN",
        "fromDisplayName": "",
        "user": "service.sms@CGPR.TN"
      },
      "loginTheme": "easybulk",
      "accountTheme": "keycloak.v2",
      "adminTheme": "",
      "emailTheme": "easybulk",
      "eventsEnabled": false,
      "eventsListeners": [
        "custom-event-listener",
        "jboss-logging"
      ],
      "enabledEventTypes": [
        "SEND_RESET_PASSWORD",
        "UPDATE_CONSENT_ERROR",
        "GRANT_CONSENT",
        "VERIFY_PROFILE_ERROR",
        "REMOVE_TOTP",
        "REVOKE_GRANT",
        "UPDATE_TOTP",
        "LOGIN_ERROR",
        "CLIENT_LOGIN",
        "RESET_PASSWORD_ERROR",
        "IMPERSONATE_ERROR",
        "CODE_TO_TOKEN_ERROR",
        "CUSTOM_REQUIRED_ACTION",
        "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
        "RESTART_AUTHENTICATION",
        "IMPERSONATE",
        "UPDATE_PROFILE_ERROR",
        "LOGIN",
        "OAUTH2_DEVICE_VERIFY_USER_CODE",
        "UPDATE_PASSWORD_ERROR",
        "CLIENT_INITIATED_ACCOUNT_LINKING",
        "TOKEN_EXCHANGE",
        "AUTHREQID_TO_TOKEN",
        "LOGOUT",
        "REGISTER",
        "DELETE_ACCOUNT_ERROR",
        "CLIENT_REGISTER",
        "IDENTITY_PROVIDER_LINK_ACCOUNT",
        "DELETE_ACCOUNT",
        "UPDATE_PASSWORD",
        "CLIENT_DELETE",
        "FEDERATED_IDENTITY_LINK_ERROR",
        "IDENTITY_PROVIDER_FIRST_LOGIN",
        "CLIENT_DELETE_ERROR",
        "VERIFY_EMAIL",
        "CLIENT_LOGIN_ERROR",
        "RESTART_AUTHENTICATION_ERROR",
        "EXECUTE_ACTIONS",
        "REMOVE_FEDERATED_IDENTITY_ERROR",
        "TOKEN_EXCHANGE_ERROR",
        "PERMISSION_TOKEN",
        "SEND_IDENTITY_PROVIDER_LINK_ERROR",
        "EXECUTE_ACTION_TOKEN_ERROR",
        "SEND_VERIFY_EMAIL",
        "OAUTH2_DEVICE_AUTH",
        "EXECUTE_ACTIONS_ERROR",
        "REMOVE_FEDERATED_IDENTITY",
        "OAUTH2_DEVICE_CODE_TO_TOKEN",
        "IDENTITY_PROVIDER_POST_LOGIN",
        "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
        "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
        "UPDATE_EMAIL",
        "REGISTER_ERROR",
        "REVOKE_GRANT_ERROR",
        "EXECUTE_ACTION_TOKEN",
        "LOGOUT_ERROR",
        "UPDATE_EMAIL_ERROR",
        "CLIENT_UPDATE_ERROR",
        "AUTHREQID_TO_TOKEN_ERROR",
        "UPDATE_PROFILE",
        "CLIENT_REGISTER_ERROR",
        "FEDERATED_IDENTITY_LINK",
        "SEND_IDENTITY_PROVIDER_LINK",
        "SEND_VERIFY_EMAIL_ERROR",
        "RESET_PASSWORD",
        "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
        "OAUTH2_DEVICE_AUTH_ERROR",
        "UPDATE_CONSENT",
        "REMOVE_TOTP_ERROR",
        "VERIFY_EMAIL_ERROR",
        "SEND_RESET_PASSWORD_ERROR",
        "CLIENT_UPDATE",
        "CUSTOM_REQUIRED_ACTION_ERROR",
        "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
        "UPDATE_TOTP_ERROR",
        "CODE_TO_TOKEN",
        "VERIFY_PROFILE",
        "GRANT_CONSENT_ERROR",
        "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
      ],
      "adminEventsEnabled": false,
      "adminEventsDetailsEnabled": false,
      "identityProviders": [],
      "identityProviderMappers": [],
      "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
          {
            "id": "66732222-1648-46e6-8cd7-ca3bd420d7af",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "max-clients": [
                "200"
              ]
            }
          },
          {
            "id": "566469f1-c536-4380-95bf-066a8468b248",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "0a5786e4-aeca-4bf3-9cf9-ea222526b246",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "a0e7559c-c873-45de-a82a-877dd6605b61",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-sha256-pairwise-sub-mapper",
                "saml-user-property-mapper",
                "oidc-usermodel-attribute-mapper",
                "oidc-address-mapper",
                "saml-user-attribute-mapper",
                "saml-role-list-mapper",
                "oidc-full-name-mapper",
                "oidc-usermodel-property-mapper"
              ]
            }
          },
          {
            "id": "06a091d0-b155-4b5f-87e2-7a9afa01bd3d",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "f541e5fd-682f-40d7-a08f-c94b1841bbb9",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-full-name-mapper",
                "saml-user-attribute-mapper",
                "oidc-address-mapper",
                "oidc-usermodel-attribute-mapper",
                "saml-user-property-mapper",
                "oidc-usermodel-property-mapper",
                "saml-role-list-mapper",
                "oidc-sha256-pairwise-sub-mapper"
              ]
            }
          },
          {
            "id": "a71b29d9-020c-45c9-bebb-2b35a49f1e9a",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "host-sending-registration-request-must-match": [
                "true"
              ],
              "client-uris-must-match": [
                "true"
              ]
            }
          },
          {
            "id": "ba72dbbd-05c6-4370-b375-d5fe692afcc6",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          }
        ],
        "org.keycloak.keys.KeyProvider": [
          {
            "id": "1e3f388b-7655-4260-9ef4-0c20c2065ff2",
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
              "kid": [
                "83b5e4bc-da2b-4a64-9846-a54cafb5c201"
              ],
              "secret": [
                "vGb2XnGSvXM90K9kxw_8ig"
              ],
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "f350fe36-4f70-45f1-9633-f39c48615e57",
            "name": "rsa-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
              "privateKey": [
                "MIIEpAIBAAKCAQEAhJMr9tGvjitigbW+71Xdeda90cHF5OEqkLrZtNzwKHLST+SH0UXea3kpX/CZFyvl11cC9p/vi0V5xQFvxHrloDKI9J99UDC35xINnzKQyh6WLaEJYg2Girx7kEe1JlImtzkuUcKWRK1+1y69H4GEGX10ZvWQ3tTRPC3juLGhdo1Ko20sHk1yEpM0taiR9k16FNZ1aZoDOmyk6ZSwZAAGND/JCCVgWqHF7J28WXuYJ5H5MEb9FmVqri7rmY5SG0u64PBq8H88c6JyrRtc4DvuktAfW1ZXaMIGC15+Cfi5sludexvn7ZuM+gu7nP+MVJdFhIpQJYlPwUvshH9nKQyG9wIDAQABAoIBAF9EOpV0fIjXGERJS9lEhJBnBaRTcFdWjnXOL19OXK1URVjvycFSSdBFErxEcl46R0GE3zZGG6ai2Cv/KkewYI3Lgqr2aOBVAfHkATHi7jSv4g8L52g0e/f6FXjKbpwI8JU9W9GY2M6lNb5/cZvQQBLpGdpaoC3gFDMAbuFrk7FSMVj1M57FxzxFukw7iiQP+GrePbw78WxWMmQEM+vN+aB3hJ1l1cshgMzKrTKrGyGAuoO5u1lidEgTytelWn3lcbmUxPRUAd19/BWnI0AXBOvI/4PJj9AeytAEguMREzY/oxZ5WPUTw4yyx1kY/BvE+EPqS3N0E6HcSh9pYxH+NWECgYEAxgQVpm6toN5YKfiCxVbjUBcmZaNTcGsGQvc3G3uHb2vNv6EUnXXKzYD1Lumv1ZxIY3fRyyrokiqJm2NAYeyTOla0cNsp65SXv3/lfVnLZqa5V5vpS9enlPyk99reGYL7krUedgzl9FW+UzStjbzukUK42tIrvx0/L38KTsF9yS8CgYEAq2Vp3uwpgmpQHpHCRrG7s1HlzxLLLfjVr1TiHDKYlofRGvo5hjwGbS7PtokzrKUTh6DMnCHLM3+Az7s72L8vvzMrbU7wJu4njmCVksYgI4mwJ1Fws0cuoCkzjlcXSVrmyqwXQfwf0mmU4+FKMVwmwJ/eI2sXKemvPYdKvyvrHLkCgYEAidgSEjf92nyttxnuPt3Lg9d5vUtDLID0bO2XiSQnFeNf6USDC1ISiZh6FdxLsVIH+mZQvzPxjr7Z6Dfhe8mqe/QbzGxk9EAOmxq3cNlvhNgPMfOxJkDLwiVV2cycy/mok2pN+DPmaH6/7UBAiOi60pg2Au5H0dTURYYUcNq1a7UCgYEAkdL765WEj5gCSK/82gb3ys6gNrknsxpmPAF9Sz5lApXVfB1u+d1yHkzYntZG59mfLyLJUwGRkGQn5RXJClVHu2Y+yYaC3qx7bTCRscntqC7Kd/lbaLzkV5IWckF454l2mPMn6pUnQe9gpS2V4T8lHXgnGH1RvPA8j53fI52rMMkCgYA2bLNt/hB3BUt65u8VZtPKfzt+bPiynrQliGpfelUuOlm1vbTyAZ/+dtG5VJ5rkK4KJjkhLgdfOwaMZrWnpG/UBiwIXhQCZCsB1+n9XmJl0Z5Kb7iEwdtjnXqN0Dgn57D0qEdiugLfDeIZ7u3p92AW9tF98fNWRPJpzkz6Yqog/A=="
              ],
              "certificate": [
                "MIICoTCCAYkCBgGQbo9ezDANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAllYnMtcmVhbG0wHhcNMjQwNzAxMTM0ODI4WhcNMzQwNzAxMTM1MDA4WjAUMRIwEAYDVQQDDAllYnMtcmVhbG0wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCEkyv20a+OK2KBtb7vVd151r3RwcXk4SqQutm03PAoctJP5IfRRd5reSlf8JkXK+XXVwL2n++LRXnFAW/EeuWgMoj0n31QMLfnEg2fMpDKHpYtoQliDYaKvHuQR7UmUia3OS5RwpZErX7XLr0fgYQZfXRm9ZDe1NE8LeO4saF2jUqjbSweTXISkzS1qJH2TXoU1nVpmgM6bKTplLBkAAY0P8kIJWBaocXsnbxZe5gnkfkwRv0WZWquLuuZjlIbS7rg8GrwfzxzonKtG1zgO+6S0B9bVldowgYLXn4J+LmyW517G+ftm4z6C7uc/4xUl0WEilAliU/BS+yEf2cpDIb3AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAASOmbhU85ep7ua8xOANpP0JQOmpBuVq7OnFgNsOchgoI145Z2oTMvcFRkfIDxy8bZduHwPMynca3oZjgjKKFsOFObO5bUQZvrynL2xVd8MOYtbsUyKH3tRok+qzMvH3m5pKn3kF8Wn3sDdYUqgMg2FDQNiGADOtjRQCOEEea4EY26/9aIxrJIvm9AIYUCGMf6vpFUfkZMBjjx+Mbu9sHShYP2EiwYGKq8BmeHSd6QWtEQeSSLdKv1VwHtk+y3WSnfI5xDOI0EwuTo2qEBAA+KuJKRD3gYH4q8k0mza5/HQ4wcLE18jzZ2KkoDM5m3zY/zhaiOT/940uHrd1hPfnk0Y="
              ],
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "b831f9ff-5c58-488d-bf1b-0d3d00484ea6",
            "name": "hmac-generated",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
              "kid": [
                "64922286-0fc0-408b-9b7d-9ecc4b16b837"
              ],
              "secret": [
                "xlojKrtybV4aO5JApRdEorskEdJ8LLylF7EOg6-m9EhG1McSGi6VST2Ffdsuy4_fM7wgzSniiClV0wni7Pe9gQ"
              ],
              "priority": [
                "100"
              ],
              "algorithm": [
                "HS256"
              ]
            }
          }
        ]
      },
      "internationalizationEnabled": true,
      "supportedLocales": [
        "fr"
      ],
      "defaultLocale": "fr",
      "authenticationFlows": [
        {
          "id": "7377b76f-29ef-4ea3-9cdc-c394c3b37558",
          "alias": "Account verification options",
          "description": "Method with which to verity the existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-email-verification",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Verify Existing Account by Re-authentication",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "9f9ba630-0e92-48fa-bf10-75a12dfe82aa",
          "alias": "Browser - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "c19e5ada-0c89-4ebd-822a-99dae5ae1a76",
          "alias": "Direct Grant - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "f5833364-079a-4104-994f-bdba7497bc6f",
          "alias": "First broker login - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "64501f68-19c7-48c1-a963-f21599c8a5c3",
          "alias": "Handle Existing Account",
          "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-confirm-link",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Account verification options",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "c6b787dc-5418-4d3e-ba77-3a165cfc92ac",
          "alias": "Reset - Conditional OTP",
          "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "1426629a-4ded-4221-a220-e4465d9de517",
          "alias": "User creation or linking",
          "description": "Flow for the existing/non-existing user alternatives",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "create unique user config",
              "authenticator": "idp-create-user-if-unique",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Handle Existing Account",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "547cad31-d358-496a-b604-5bcc790fc133",
          "alias": "Verify Existing Account by Re-authentication",
          "description": "Reauthentication of existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "First broker login - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "9aa4de46-2eeb-4346-bda4-7b884be363dc",
          "alias": "browser",
          "description": "browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "forms",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "4ff89676-e2f0-4d97-a2c7-2bc1603aaa4e",
          "alias": "clients",
          "description": "Base authentication for clients",
          "providerId": "client-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "client-secret",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-secret-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-x509",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "735f95a3-7067-4e19-ba6f-bafc03c905c0",
          "alias": "direct grant",
          "description": "OpenID Connect Resource Owner Grant",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "direct-grant-validate-username",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "Direct Grant - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "ef52e0ca-f443-4077-9ed7-e5dc036d7352",
          "alias": "docker auth",
          "description": "Used by Docker clients to authenticate against the IDP",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "docker-http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "2504a064-87c4-4675-b27a-e8f85327c6ea",
          "alias": "ebs-authentification",
          "description": "browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": false,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "ebs-authentification forms",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "732e5e42-a54b-4702-9a09-2e5bed37f6e7",
          "alias": "ebs-authentification Browser - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": false,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "c9337e8d-e2b6-4936-a6cf-01e3c628ad83",
          "alias": "ebs-authentification forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": false,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorConfig": "set organisation",
              "authenticator": "set-organisation",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 21,
              "autheticatorFlow": true,
              "flowAlias": "ebs-authentification Browser - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "db69ac09-07ae-41dc-886c-baf5e104ec64",
          "alias": "first broker login",
          "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "review profile config",
              "authenticator": "idp-review-profile",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "User creation or linking",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "02146e57-6a99-421c-b8d9-7baa4ae2bc71",
          "alias": "forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Browser - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "f310d191-f0fa-481f-ad84-4c99152f61ad",
          "alias": "registration",
          "description": "registration flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-page-form",
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": true,
              "flowAlias": "registration form",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "b1adda4f-2541-4642-b05e-99b9be5b4bfe",
          "alias": "registration form",
          "description": "registration form",
          "providerId": "form-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-user-creation",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-profile-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-password-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 50,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-recaptcha-action",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 60,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "dc2185eb-c5fd-4487-aeb0-b8db6e91d952",
          "alias": "reset credentials",
          "description": "Reset credentials for a user if they forgot their password or something",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "reset-credentials-choose-user",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-credential-email",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 40,
              "autheticatorFlow": true,
              "flowAlias": "Reset - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "8c3dade3-cc09-4b6e-b83d-df8a7ad4f392",
          "alias": "saml ecp",
          "description": "SAML ECP Profile Authentication Flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        }
      ],
      "authenticatorConfig": [
        {
          "id": "0fd6d0b4-1087-4e59-9824-4fbb5fa69af1",
          "alias": "create unique user config",
          "config": {
            "require.password.update.after.registration": "false"
          }
        },
        {
          "id": "c8e07313-9ec3-4681-9a46-db6ad7b90cc8",
          "alias": "review profile config",
          "config": {
            "update.profile.on.first.login": "missing"
          }
        },
        {
          "id": "71481453-8f81-449b-a22e-eb4e31f7c883",
          "alias": "set organisation",
          "config": {}
        }
      ],
      "requiredActions": [
        {
          "alias": "CONFIGURE_TOTP",
          "name": "Configure OTP",
          "providerId": "CONFIGURE_TOTP",
          "enabled": true,
          "defaultAction": false,
          "priority": 10,
          "config": {}
        },
        {
          "alias": "TERMS_AND_CONDITIONS",
          "name": "Terms and Conditions",
          "providerId": "TERMS_AND_CONDITIONS",
          "enabled": false,
          "defaultAction": false,
          "priority": 20,
          "config": {}
        },
        {
          "alias": "UPDATE_PROFILE",
          "name": "Update Profile",
          "providerId": "UPDATE_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 30,
          "config": {}
        },
        {
          "alias": "UPDATE_PASSWORD",
          "name": "Update Password",
          "providerId": "UPDATE_PASSWORD",
          "enabled": true,
          "defaultAction": false,
          "priority": 40,
          "config": {}
        },
        {
          "alias": "VERIFY_EMAIL",
          "name": "Verify Email",
          "providerId": "VERIFY_EMAIL",
          "enabled": true,
          "defaultAction": false,
          "priority": 50,
          "config": {}
        },
        {
          "alias": "delete_account",
          "name": "Delete Account",
          "providerId": "delete_account",
          "enabled": false,
          "defaultAction": false,
          "priority": 60,
          "config": {}
        },
        {
          "alias": "update_user_locale",
          "name": "Update User Locale",
          "providerId": "update_user_locale",
          "enabled": true,
          "defaultAction": false,
          "priority": 1000,
          "config": {}
        },
        {
          "alias": "select-organisation-action",
          "name": "select-organisation-action",
          "providerId": "select-organisation-action",
          "enabled": true,
          "defaultAction": false,
          "priority": 1001,
          "config": {}
        }
      ],
      "browserFlow": "browser",
      "registrationFlow": "registration",
      "directGrantFlow": "direct grant",
      "resetCredentialsFlow": "reset credentials",
      "clientAuthenticationFlow": "clients",
      "dockerAuthenticationFlow": "docker auth",
      "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaAuthRequestedUserHint": "login_hint",
        "clientOfflineSessionMaxLifespan": "0",
        "oauth2DevicePollingInterval": "5",
        "clientSessionIdleTimeout": "0",
        "clientOfflineSessionIdleTimeout": "0",
        "cibaInterval": "5",
        "realmReusableOtpCode": "false",
        "cibaExpiresIn": "120",
        "oauth2DeviceCodeLifespan": "600",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "0",
        "frontendUrl": "https://app.easybulk.intra/auth/",
        "acr.loa.map": "{}"
      },
      "keycloakVersion": "22.0.3",
      "userManagedAccessAllowed": true,
      "clientProfiles": {
        "profiles": []
      },
      "clientPolicies": {
        "policies": []
      }
    }
